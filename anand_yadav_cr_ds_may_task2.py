# -*- coding: utf-8 -*-
"""Anand-Yadav-CR-DS-May-Task2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yhEBZ3xEjxNx7jUg13VhPARDzylv6Gpk

Fraud Detection
"""

# Importing the Dependencies
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score,f1_score

# Loading the dataset to a Pandas DataFrame
original_data = pd.read_csv('/content/drive/MyDrive/Inter/Codingraja/DS Intern/Tasks/Task-2/creditcard.csv')

# Separating the data for analysis
legit = original_data[original_data.Class == 0]
fraud = original_data[original_data.Class == 1]
print(legit.shape)
print(fraud.shape)

# Under-Sampling
legit_sample = legit.sample(n=492)

# Concatenating two DataFrames
new_dataset = pd.concat([legit_sample, fraud], axis=0)

# Splitting the data into Features & Targets
X = new_dataset.drop(columns='Class', axis=1)
Y = new_dataset['Class']

# Split the data into Training data & Testing Data
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)
print(X.shape, X_train.shape, X_test.shape)

# Model Training
model = RandomForestClassifier(n_estimators=100, random_state=2)
# Training the Random Forest Classifier with Training Data
model.fit(X_train, Y_train)

# Model Evaluation
# Accuracy Score
X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)
print('Accuracy on Training data : ', training_data_accuracy)

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)
print('Accuracy score on Test Data : ', test_data_accuracy)

f1_train = f1_score(Y_train, X_train_prediction)
print('F1 Score on Training data: ', f1_train)

f1_test = f1_score(Y_test, X_test_prediction)
print('F1 Score on Test Data: ', f1_test)

